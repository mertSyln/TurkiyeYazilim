name: dockercompose441413832720186882
services:
  project1.database:
    container_name: project1.databse
    environment:
      POSTGRES_DB: Project1DB
      POSTGRES_PASSWORD: 10Balkes.
      POSTGRES_USER: postgres
    image: postgres:15
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume: {}
  project1.webapi:
    build:
      context: C:\Users\ASUS\Desktop\TR Yazılım\TrYazilim
      dockerfile: Presentation\Project1.WebAPI\Dockerfile
      args:
        BUILD_CONFIGURATION: Release
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Project1.WebAPI
    container_name: Project1.WebAPI
    entrypoint:
      - C:\remote_debugger\x64\msvsmon.exe
      - /noauth
      - /anyuser
      - /silent
      - /nostatus
      - /noclrwarn
      - /nosecuritywarn
      - /nofirewallwarn
      - /nowowwarn
      - /fallbackloadremotemanagedpdbs
      - /timeout:2147483646
      - /LogDebuggeeOutputToStdOut
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: project1webapi
    labels:
      com.microsoft.visual-studio.project-name: Project1.WebAPI
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath c:\.nuget\packages  "C:\app\Project1.WebAPI.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: C:\remote_debugger\x64\utils\KillProcess.exe dotnet.exe
      com.microsoft.visualstudio.debuggee.program: '"C:\Program Files\dotnet\dotnet.exe"'
      com.microsoft.visualstudio.debuggee.workingdirectory: C:\app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8081"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: C:\HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\win10-x64\net8.0
        target: C:\HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\win10-x64\net6.0
        target: C:\TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/ASP.NET/Https
        target: C:\Users\ContainerUser\AppData\Roaming\ASP.NET\Https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/Microsoft/UserSecrets
        target: C:\Users\ContainerUser\AppData\Roaming\Microsoft\UserSecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\onecoremsvsmon\17.9.20214.3421
        target: C:\remote_debugger
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose441413832720186882_default
volumes:
  postgres_data:
    name: dockercompose441413832720186882_postgres_data